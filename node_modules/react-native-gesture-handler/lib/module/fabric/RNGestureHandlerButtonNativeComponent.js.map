{"version":3,"sources":["RNGestureHandlerButtonNativeComponent.ts"],"names":["codegenNativeComponentUntyped","codegenNativeComponent"],"mappings":"AAAA;AACA,OAAOA,6BAAP,MAA0C,yDAA1C,C,CACA;;AAUA;AACA,MAAMC,sBAAsB,GAAGD,6BAA/B;AAcA,eAAeC,sBAAsB,CAAc,wBAAd,CAArC","sourcesContent":["// @ts-ignore TODO: remove once there is a .d.ts file with definitions\nimport codegenNativeComponentUntyped from 'react-native/Libraries/Utilities/codegenNativeComponent';\n// @ts-ignore TODO: remove once there is a .d.ts file with definitions\nimport type {\n  Int32,\n  WithDefault,\n  // @ts-ignore TODO: remove once there is a .d.ts file with definitions\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport type { ViewProps, HostComponent } from 'react-native';\n// @ts-ignore TODO: remove once there is a .d.ts file with definitions\nimport type { ColorValue } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst codegenNativeComponent = codegenNativeComponentUntyped as <T extends {}>(\n  name: string\n) => HostComponent<T>;\n\ninterface NativeProps extends ViewProps {\n  exclusive?: WithDefault<boolean, true>;\n  foreground?: boolean;\n  borderless?: boolean;\n  enabled?: WithDefault<boolean, true>;\n  rippleColor?: ColorValue;\n  rippleRadius?: Int32;\n  touchSoundDisabled?: WithDefault<boolean, false>;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNGestureHandlerButton');\n"]}